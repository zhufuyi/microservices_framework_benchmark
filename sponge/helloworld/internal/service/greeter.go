// Code generated by https://github.com/zhufuyi/sponge

package service

import (
	"context"

	"google.golang.org/grpc"

	//"github.com/zhufuyi/sponge/pkg/grpc/interceptor"
	//"github.com/zhufuyi/sponge/pkg/logger"

	helloworldV1 "helloworld/api/helloworld/v1"
	//"helloworld/internal/cache"
	//"helloworld/internal/dao"
	//"helloworld/internal/ecode"
	//"helloworld/internal/model"
)

func init() {
	registerFns = append(registerFns, func(server *grpc.Server) {
		helloworldV1.RegisterGreeterServer(server, NewGreeterServer())
	})
}

var _ helloworldV1.GreeterServer = (*greeter)(nil)

type greeter struct {
	helloworldV1.UnimplementedGreeterServer
}

// NewGreeterServer create a server
func NewGreeterServer() helloworldV1.GreeterServer {
	return &greeter{}
}

// SayHello Sends a greeting
func (s *greeter) SayHello(ctx context.Context, req *helloworldV1.HelloRequest) (*helloworldV1.HelloReply, error) {
	return &helloworldV1.HelloReply{
		Message: req.Name,
	}, nil
}
